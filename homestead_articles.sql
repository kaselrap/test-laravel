INSERT INTO homestead.articles (id, title, description, text, active, picture, video, user_id, created_at, updated_at, total_views) VALUES (1, 'Paginating Eloquent Results', 'You may also paginate Eloquent queries. In this example, we will paginate the User model with 15 items per page. As you ', 'You may also paginate Eloquent queries. In this example, we will paginate the User model with 15 items per page. As you can see, the syntax is nearly identical to paginating query builder results: Sometimes you may wish to create a pagination instance manually, passing it an array of items. You may do so by creating either an Illuminate\\Pagination\\Paginator or Illuminate\\Pagination\\LengthAwarePaginator instance, depending on your needs.', 0, '1.jpeg', null, 1, '2018-12-01 14:08:55', '2018-12-14 13:26:03', 104);
INSERT INTO homestead.articles (id, title, description, text, active, picture, video, user_id, created_at, updated_at, total_views) VALUES (2, 'Some new Article', 'You can also check this post for advanced search: Laravel 5.x Search Box using jQuery + Ajax. So what we are going to do', 'You can also check this post for advanced search: Laravel 5.x Search Box using jQuery + Ajax. So what we are going to do is to add a search box text field in the upper left side of our table. Definitely it will search for any records containing the word to search. The search box can be reuse in other index as well to make tidy codes.', 0, '1.jpg', null, 1, '2018-12-13 15:39:41', '2018-12-14 10:01:48', 11);